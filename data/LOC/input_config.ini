cloud          data/LOC/CO/input_cloud.bin    #  cloud defined on a Cartesian grid
distance       7200.0                         #  cloud distance [pc]
angle          1.0                            #  model cell size  [arcsec]
molecule       data/LOC/CO/input_molecule.dat #  name of the Lamda file
density        1.0                            #  scaling of densities in the cloud file
temperature    1.0                            #  scaling of Tkin values in the cloud file
fraction       1.0                            #  scaling o the fraction abundances
velocity       1.0                            #  scaling of the velocity
sigma          1.0                            #  scaling o the microturbulence
isotropic      2.73                           #  Tbg for the background radiation field
levels         3                              #  number of energy levels in the calculations
uppermost      3                              #  uppermost level tracked for convergence
iterations     5                              #  number of iterations
nside          2                              #  NSIDE parameter determining the number of rays (angles)
direction      90 0.001                       #  theta, phi [deg] for the direction towards the observer
points         64 64                          #  number of pixels in the output maps
grid           1.0                            #  map pixel size [arcsec]
spectra        1 0  2 1                       #  spectra written for transitions == upper lower (pair of integers)
transitions    1 0  2 1                       #  Tex saved for transitions (upper and lower levels of each transition)
bandwidth      6.0                            #  bandwidth in the calculations [km/s]
channels       128                            #  number of velocity channels
prefix         data/LOC/CO/output/res         #  prefix for output files
load           load_level_pop                 #  load level populations
save           save_level_pop                 #  save level populations
stop          -1.0                            #  stop if level-populations change below a threshold
gpu            1                              #  gpu>0 => use the first available gpu
